@use "sass:math";

$primary-color: #fff;
$animation-duration: 4s;
$glitch-duration: 8s;
$glitch-delay: 2s;
$noise-steps: 30;

app-home {
  margin: 0;
  padding: 0;
  background-color: $primary-color;
  overflow: hidden;
  text-align: center;
}

.DividerDiv {
  position: absolute;
  width: 80%;
  right: 0;
  left: 0;
  margin-left: auto;
  margin-right: auto;
  bottom: 2vh;
}

.WelcomeDiv {
  position: absolute;
  bottom: 8vh;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding-left: 5%;
  padding-right: 5%;
}

.WelcomeQuote {
  font-size: 1.5rem;
  letter-spacing: 2px;
  color: $primary-color;
  text-shadow:
    -4px 0 rgba(255, 0, 255, 0.5),
    4px 0 rgba(144, 238, 144, 0.5);
  text-align: center;
}

.glitch {
  font-size: 1.5rem;
  width: auto;
  color: $primary-color;
  letter-spacing: 2px;
  -webkit-animation: glitch $glitch-duration $glitch-delay infinite;
  animation: glitch $glitch-duration $glitch-delay infinite;
  padding-left: 5%;
  padding-right: 5%;
  will-change: transform;
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  background: transparent;
  overflow: hidden;
  margin-top: 5px;
  will-change: transform;
}

.glitch::before {
  left: -4px;
  text-shadow: -8px 0 magenta;
  -webkit-animation:
    noise-1 1.5s linear infinite alternate-reverse,
    glitch $glitch-duration $glitch-delay infinite;
  animation:
    noise-1 1.5s linear infinite alternate-reverse,
    glitch $glitch-duration $glitch-delay infinite;
}

.glitch::after {
  left: 4px;
  text-shadow: -8px 0 lightgreen;
  -webkit-animation:
    noise-2 1.5s linear infinite alternate-reverse,
    glitch $glitch-duration $glitch-delay infinite;
  animation:
    noise-2 1.5s linear infinite alternate-reverse,
    glitch $glitch-duration $glitch-delay infinite;
}

@-webkit-keyframes glitch {
  1% {
    transform: rotateX(10deg) skewX(90deg);
  }
  60% {
    transform: rotateX(0deg) skewX(0deg);
  }
}

@keyframes glitch {
  1% {
    transform: rotateX(10deg) skewX(90deg);
  }
  60% {
    transform: rotateX(0deg) skewX(0deg);
  }
}
@-webkit-keyframes noise-1 {
  @for $i from 1 through $noise-steps {
    #{percentage($i * math.div(1, $noise-steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      -webkit-clip-path: inset(#{$top}px 0 #{$bottom}px 0);
      clip-path: inset(#{$top}px 0 #{$bottom}px 0);
    }
  }
}

@keyframes noise-1 {
  @for $i from 1 through $noise-steps {
    #{percentage($i * math.div(1, $noise-steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      -webkit-clip-path: inset(#{$top}px 0 #{$bottom}px 0);
      clip-path: inset(#{$top}px 0 #{$bottom}px 0);
    }
  }
}

@-webkit-keyframes noise-2 {
  @for $i from 0 through $noise-steps {
    #{percentage($i * math.div(1, $noise-steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      -webkit-clip-path: inset(#{$top}px 0 #{$bottom}px 0);
      clip-path: inset(#{$top}px 0 #{$bottom}px 0);
    }
  }
}

@keyframes noise-2 {
  @for $i from 0 through $noise-steps {
    #{percentage($i * math.div(1, $noise-steps))} {
      $top: random(100);
      $bottom: random(101 - $top);
      -webkit-clip-path: inset(#{$top}px 0 #{$bottom}px 0);
      clip-path: inset(#{$top}px 0 #{$bottom}px 0);
    }
  }
}

.scanlines {
  overflow: hidden;
  mix-blend-mode: difference;
}

.scanlines::before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  background: repeating-linear-gradient(to bottom, transparent 0%, rgba(255, 255, 255, 0) 0.5%, transparent 1%);
  -webkit-animation: fudge 3s ease-in-out alternate infinite;
  animation: fudge 3s ease-in-out alternate infinite;
  will-change: transform;
}

@-webkit-keyframes fudge {
  from {
    transform: translate(0px, 0px);
  }
  to {
    transform: translate(0px, 2%);
  }
}

@keyframes fudge {
  from {
    transform: translate(0px, 0px);
  }
  to {
    transform: translate(0px, 2%);
  }
}

.Divider {
  display: flex;
  justify-content: center;
  align-items: center;
}

.Line {
  flex-grow: 1;
  border-top: 1px solid $primary-color;
}

.AngleDown {
  cursor: pointer;
  margin-top: 0;
  color: $primary-color;
  font-size: 35px;
  padding: 0 25px;
  -webkit-animation: UpDown $animation-duration infinite;
  animation: UpDown $animation-duration infinite;
  will-change: transform;
}

@-webkit-keyframes UpDown {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-8px);
  }
}

@keyframes UpDown {
  0%,
  100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-8px);
  }
}
